<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:annotation-config></context:annotation-config>

	<bean id="dataSourceMysql"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
		<property name="url" value="jdbc:mysql://localhost:3306/base"></property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceMysql"></property>
		<property name="packagesToScan">
			<value>fr.dawan.formation.domain</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- Sortie dans la console -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- Formater la sortie -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- hibernate.dialect -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- validate: valide le schéma de la base et ne change rien update: 
					mettre à jour le schéma create-drop: détruit le schéma de la base et on le 
					récrée create: creation du schéma et destruction des données -->
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="autodetectDataSource" value="true"></property>
	</bean>
</beans>




<!-- <?xml version="1.0" encoding="UTF-8"?> <beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.3.xsd"> <context:annotation-config></context:annotation-config> 
	<bean id="dataSourceMysql" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
	<property name="username" value="root"></property> <property name="password" 
	value=""></property> <property name="url" value="jdbc:mysql://localhost:3306/base"></property> 
	</bean> <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> 
	<property name="dataSource" ref="dataSourceMysql"></property> <property name="packagesToScan"> 
	<value>fr.dawan.formation.domain</value> </property> <property name="hibernateProperties"> 
	<props> <prop key="hibernate.show_sql">true</prop> Formater la sortie <prop 
	key="hibernate.format_sql">true</prop> <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> 
	Valide: le schéma de la base et ne change rien au démarrage create-drop: 
	détruit le shcéma de la base et on le récrée <prop key="hibernate.hbm2ddl.auto">create-drop</prop> 
	</props> </property> </bean> <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"> 
	<property name="sessionFactory" ref="sessionFactory"></property> <property 
	name="autodetectDataSource" value="true"></property> </bean> Scannez les 
	packages avec Spring <context:component-scan base-package="fr.dawan.formation"></context:component-scan> 
	</beans> -->